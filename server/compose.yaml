version: '4'
networks:
  ecomm_net:
    driver: bridge
services:
  mysql:
    container_name: mysql
    image: mysql:latest
    environment:
      MYSQL_DATABASE: ecommerce
      # MYSQL_USER: root
      MYSQL_PASSWORD: mysql
      MYSQL_ROOT_PASSWORD: mysql
    ports:
      - '3307:3306'
    volumes:
      - ./data/mysql:/var/lib/mysql
    networks:
      - ecomm_net

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"



  # Setup KeyCloak		
  keycloak-mysql:
    container_name: keycloak_mysql
    image: mysql:latest
    volumes:
      - ./volume-data/mysql_keycloak_data:/var/lib/mysql
    environment:
      MYSQL_USER: keycloak
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: keycloak
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-u", "keycloak", "-ppassword"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
     - ecomm_net

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:24.0.1
    command: ['start-dev','--import-realm']
    environment:
      KC_DB: mysql
      KC_DB_URL_HOST: keycloak_mysql
      #KC_DB_URL: jdbc:mysql://keycloak-mysql:3306/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - '8181:8080'
    volumes:
      - ./docker/keycloak/realms/:/opt/keycloak/data/import
    depends_on:
      keycloak-mysql:
        condition: service_healthy
    restart: always
    networks:
      - ecomm_net

  # Observability
  loki:
    container_name: loki
    image: grafana/loki:main
    # command: ['-config.file=/etc/loki-config.yaml']
    ports:
      - '3100:3100'
    networks:
      - ecomm_net

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.46.0
    command:
      - --enable-feature=exemplar-storage
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - '9090:9090'
    networks:
      - ecomm_net
  
  tempo:
    container_name: tempo
    image: grafana/tempo:2.2.2
    command: ['-config.file=/etc/tempo.yaml']
    volumes:
      - ./docker/tempo/tempo.yml:/etc/tempo.yaml:ro
      - ./docker/tempo/tempo-data:/tmp/tempo
    ports:
      - '3110:3110' # Tempo
      - '9411:9411' # Zipkin
    networks:
      - ecomm_net

  grafana:
    container_name: grafana
    image: grafana/grafana:10.1.0
    volumes:
      - ./docker/grafana:/etc/grafana/provisioning/datasource:ro
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - '3000:3000'
    networks:
      - ecomm_net
